name: release
on:
  push:
    branches: [ master ]

jobs:
  release:
    runs-on: windows-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Set Version
        run: |
          .\tsv.exe --env-file $GITHUB_ENV
     
      - name: Build
        run: |
          dotnet publish SelfUpdatingConsole\SelfUpdatingConsole.csproj -r win-x64 -p:PublishSingleFile=true --no-self-contained -c release -p:Version=${{ env.TIMESTAMP_VERSION }} -o .
          dotnet publish SelfUpdatingConsole\SelfUpdatingConsole.csproj -r linux-x64 -p:PublishSingleFile=true --no-self-contained -c release -p:Version=${{ env.TIMESTAMP_VERSION }} -o .
          dotnet publish SelfUpdatingWinForms\SelfUpdatingWinForms.csproj -r win-x64 -p:PublishSingleFile=true --no-self-contained -c release -p:Version=${{ env.TIMESTAMP_VERSION }} -o .
          dotnet pack SelfUpdatingConsole\SelfUpdatingConsole.csproj -c release -p:PackageVersion=${{ env.TIMESTAMP_VERSION }} -o .
          dotnet pack SelfUpdatingWinForms\SelfUpdatingWinForms.csproj -c release -p:PackageVersion=${{ env.TIMESTAMP_VERSION }} -o .
          dotnet nuget push "*.nupkg" --skip-duplicate -k ${{secrets.NUGET_KEY}} -s https://api.nuget.org/v3/index.json


      - name: Tag and Release
        uses: jasondavis303/tag-and-release-and-upload@v1.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: v${{ env.TIMESTAMP_VERSION }}          
          assets: '[ "suac.exe", "suac", "suag.exe" ]'
          overwrite: true
