name: release
on:
  push:
    branches: [ master ]

jobs:
  release:
    runs-on: windows-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Build
        run: |
          dotnet publish SelfUpdatingConsole\SelfUpdatingConsole.csproj -r win-x64 -p:PublishSingleFile=true --no-self-contained -c release -o .
          dotnet publish SelfUpdatingConsole\SelfUpdatingConsole.csproj -r linux-x64 -p:PublishSingleFile=true --no-self-contained -c release -o .
          dotnet publish SelfUpdatingWinForms\SelfUpdatingWinForms.csproj -r win-x64 -p:PublishSingleFile=true --no-self-contained -c release -o .
          dotnet VersionCreator.dll

      - name: Get version
        id: get_version
        uses: jasondavis303/net-sdk-proj-file-version@v1.0.1
        with:
          PROJ_FILE: version.txt
       
      - name: Build nuget
        run: |
          dotnet pack SelfUpdatingConsole\SelfUpdatingConsole.csproj -c release -p:PackageVersion=${{ steps.get_version.outputs.ASSEMBLY_VERSION }} -o .
          dotnet pack SelfUpdatingWinForms\SelfUpdatingWinForms.csproj -c release -p:PackageVersion=${{ steps.get_version.outputs.ASSEMBLY_VERSION }} -o .
          dotnet nuget push "*.nupkg" --skip-duplicate --api-key ${{secrets.NUGET_KEY}}

          

      - run: |
          dir

      - name: Tag and Release
        uses: jasondavis303/tag-and-release-and-upload@v1.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
          # Use the version from the previous step
          version: v${{ steps.get_version.outputs.ASSEMBLY_VERSION }}
          
          assets: '[ "suac.exe", "suac", "suag.exe" ]'
          overwrite: true
